<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <record id="public_questionnaire_page" model="ir.ui.view">
        <field name="name">public_questionnaire_page</field>
        <field name="type">qweb</field>
        <field name="key">planetio_todo.public_questionnaire_page</field>
        <field name="arch" type="xml">
            <template id="public_questionnaire_page" name="EUDR Questionnaire" page="True">
                <t t-name="planetio_todo.public_questionnaire_page">
                    <html>
                        <head>
                            <title>EUDR Questionnaire</title>
                            <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&amp;display=swap" rel="stylesheet"/>
                            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"/>
                            <style>
                                body {
                                    font-family: 'Poppins', sans-serif;
                                    background: #fef6f0;
                                    padding: 40px;
                                    max-width: 900px;
                                    margin: auto;
                                    color: #333;
                                }
                                h1 {
                                    font-size: 30px;
                                    color: #00587C;
                                    text-align: center;
                                    margin-bottom: 30px;
                                }
                                .infos {
                                    text-align: center;
                                    font-size: 16px;
                                    margin-bottom: 40px;
                                }
                                .section-title {
                                    font-size: 20px;
                                    font-weight: bold;
                                    margin-top: 30px;
                                    margin-bottom: 10px;
                                    border-bottom: 2px solid #003449;
                                    padding-bottom: 5px;
                                    color: #00587C;
                                }
                                .question {
                                    margin-bottom: 25px;
                                    padding: 15px;
                                    background: #ffffff;
                                    border-radius: 10px;
                                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
                                }
                                label {
                                    font-weight: 600;
                                    display: block;
                                    margin-bottom: 10px;
                                }
                                .btn-group {
                                    display: flex;
                                    gap: 10px;
                                    margin-bottom: 10px;
                                    flex-wrap: wrap;
                                }
                                .btn-choice {
                                    flex: 1 1 30%;
                                    padding: 14px;
                                    font-size: 18px;
                                    font-weight: bold;
                                    text-align: center;
                                    border-radius: 8px;
                                    border: none;
                                    cursor: pointer;
                                    transition: all 0.2s ease-in-out;
                                }
                                .btn-yes {
                                    background-color: #a6e6a6;
                                    color: #1b5e20;
                                }
                                .btn-yes.active {
                                    background-color: #4caf50;
                                    color: white;
                                }
                                .btn-no {
                                    background-color: #f8bcbc;
                                    color: #b71c1c;
                                }
                                .btn-no.active {
                                    background-color: #f44336;
                                    color: white;
                                }
                                .btn-attach {
                                    background-color: #ffddb3;
                                    color: #e65100;
                                }
                                .btn-attach.active {
                                    background-color: #ff9800;
                                    color: white;
                                }
                                .note-field {
                                    width: 100%;
                                    height: 80px;
                                    padding: 10px;
                                    font-size: 14px;
                                    border-radius: 6px;
                                    border: 1px solid #ccc;
                                    font-family: 'Poppins', sans-serif;
                                    resize: none;
                                }
                                .note-field::placeholder {
                                    color: rgba(0,0,0,0.4);
                                    font-style: italic;
                                }
                                input[type="file"] {
                                    display: none;
                                }
                                button[type="submit"] {
                                    display: block;
                                    width: 100%;
                                    background-color: #5D8DA8;
                                    color: white;
                                    border: none;
                                    padding: 14px;
                                    font-size: 18px;
                                    border-radius: 10px;
                                    cursor: pointer;
                                    transition: background 0.3s ease;
                                    margin-top: 30px;
                                }
                                button[type="submit"]:hover {
                                    background-color: #4E7991;
                                }
                            </style>
                            <script>
                                document.addEventListener('DOMContentLoaded', function () {
                                    function showMessage(el, text, color = 'green') {
                                        const container = el.closest('.question').querySelector('.upload-message');
                                        const message = document.createElement('div');
                                        message.style.color = color;
                                        message.style.opacity = 0;
                                        message.style.transition = 'opacity 0.4s ease';
                                        message.textContent = text;
                                        container.innerHTML = '';
                                        container.appendChild(message);
                                        requestAnimationFrame(() => {
                                            message.style.opacity = 1;
                                        });
                                        setTimeout(() => {
                                            message.style.opacity = 0;
                                            setTimeout(() => container.innerHTML = '', 400);
                                        }, 5000);
                                    }

                                    document.querySelectorAll('.btn-choice').forEach(button => {
                                        button.addEventListener('click', function () {
                                            if (this.classList.contains('btn-attach')) return;
                                            const group = this.closest('.btn-group');
                                            group.querySelectorAll('.btn-choice.btn-yes, .btn-choice.btn-no').forEach(btn => btn.classList.remove('active'));
                                            this.classList.add('active');
                                            const input = group.querySelector('input[type="hidden"]');
                                            input.value = this.dataset.value;
                                        });
                                    });

                                    document.querySelectorAll('.btn-attach').forEach(button => {
                                        button.addEventListener('click', function () {
                                            const fileInput = this.parentElement.querySelector('input[type="file"]');
                                            fileInput.click();
                                        });
                                    });

                                    document.querySelectorAll('input[type="file"]').forEach(input => {
                                        input.addEventListener('change', function () {
                                            const file = this.files[0];
                                            const fileNameDisplay = this.parentElement.querySelector('.file-name');
                                            if (!file) return;

                                            const allowedTypes = [
                                                "application/pdf",
                                                "application/msword",
                                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                                "image/jpeg",
                                                "image/jpg",
                                                "image/png"
                                            ];
                                            if (!allowedTypes.includes(file.type)) {
                                                showMessage(this, "File type not allowed. Allowed types: PDF, DOC, DOCX, JPG, PNG", 'red');
                                                this.value = "";
                                                fileNameDisplay.innerHTML = "";
                                                return;
                                            }
                                            if (file.size > 20 * 1024 * 1024) {
                                                showMessage(this, "File too large. Max size is 20MB.", 'red');
                                                this.value = "";
                                                fileNameDisplay.innerHTML = "";
                                                return;
                                            }

                                            fileNameDisplay.innerHTML = `
                                                ${file.name}
                                                <span class="remove-file" style="margin-left:10px; cursor:pointer; color:red; font-weight:bold;">X</span>
                                            `;

                                            fileNameDisplay.querySelector('.remove-file').addEventListener('click', () => {
                                                this.value = "";
                                                fileNameDisplay.innerHTML = "";

                                                const answerId = this.name.split('_')[1];

                                                fetch('/planetio/questionario/update_answer', {
                                                    method: 'POST',
                                                    headers: {'Content-Type': 'application/json'},
                                                    body: JSON.stringify({
                                                        token: document.querySelector('input[name="token"]').value,
                                                        answer_id: parseInt(answerId),
                                                        remove_attachment: true
                                                    })
                                                }).then(response => response.json())
                                                .then(data => {
                                                    if (data &amp;&amp; data.result &amp;&amp; data.result.success) {
                                                        showRealtimeMessage(answerId, 'Attachment removed.', 'green');
                                                    } else if (data &amp;&amp; data.result &amp;&amp; data.result.error) {
                                                        showRealtimeMessage(answerId, 'Error: ' + data.result.error, 'red');
                                                    } else {
                                                        showRealtimeMessage(answerId, 'Error: Unknown response', 'red');
                                                    }
                                                });
                                            });

                                            showMessage(this, "File uploaded successfully.", 'green');
                                        });
                                    });

                                    function saveAnswerRealtime(answerId, answerValue = null, additionalInfo = null, attachment = null, attachmentFilename = null) {
                                        fetch('/planetio/questionario/update_answer', {
                                            method: 'POST',
                                            headers: {'Content-Type': 'application/json'},
                                            body: JSON.stringify({
                                                token: document.querySelector('input[name="token"]').value,
                                                answer_id: parseInt(answerId),
                                                answer_value: answerValue,
                                                additional_info: additionalInfo,
                                                attachment: attachment,
                                                attachment_filename: attachmentFilename
                                            })
                                        })
                                        .then(response => response.json())
                                        .then(data => {
                                            console.log('Response from server:', data);

                                            if (data &amp;&amp; data.result &amp;&amp; data.result.success === true) {
                                                showRealtimeMessage(answerId, 'Saved successfully.', 'green');
                                            } else if (data &amp;&amp; data.result &amp;&amp; data.result.error) {
                                                showRealtimeMessage(answerId, 'Error: ' + data.result.error, 'red');
                                            } else if (data &amp;&amp; data.error) {  // fallback se Odoo restituisce un errore globale
                                                showRealtimeMessage(answerId, 'Error: ' + data.error.message, 'red');
                                            } else {
                                                showRealtimeMessage(answerId, 'Error: Unknown response', 'red');
                                            }
                                        })
                                        .catch(err => {
                                            console.error('Error during saving:', err);
                                            showRealtimeMessage(answerId, 'Error during saving.', 'red');
                                        });
                                    }

                                    document.querySelectorAll('.btn-yes, .btn-no').forEach(button => {
                                        button.addEventListener('click', function () {
                                            const answerId = parseInt(this.closest('.question').querySelector('input[type="hidden"]').name.split('_')[1]);
                                            const value = this.dataset.value;
                                            saveAnswerRealtime(answerId, value);
                                        });
                                    });

                                    document.querySelectorAll('.note-field').forEach(textarea => {
                                        textarea.addEventListener('blur', function () {
                                            const answerId = this.name.split('_')[1];
                                            saveAnswerRealtime(answerId, null, this.value);
                                        });
                                    });

                                    document.querySelectorAll('input[type="file"]').forEach(input => {
                                        input.addEventListener('change', function () {
                                            const file = this.files[0];
                                            if (!file) return;
                                            const answerId = this.name.split('_')[1];

                                            const reader = new FileReader();
                                            reader.onload = function (e) {
                                                const base64file = e.target.result.split(',')[1];
                                                saveAnswerRealtime(answerId, null, null, base64file, file.name);
                                            };
                                            reader.readAsDataURL(file);
                                        });
                                    });

                                    document.querySelectorAll('.remove-file').forEach(button => {
                                        button.addEventListener('click', function () {
                                            const answerId = parseInt(this.closest('.question').querySelector('input[type="hidden"]').name.split('_')[1]);
                                            fetch('/planetio/questionario/update_answer', {
                                                method: 'POST',
                                                headers: {'Content-Type': 'application/json'},
                                                body: JSON.stringify({
                                                    token: document.querySelector('input[name="token"]').value,
                                                    answer_id: answerId,
                                                    remove_attachment: true
                                                })
                                            }).then(response => response.json())
                                            .then(data => {
                                                if (data &amp;&amp; data.result &amp;&amp; data.result.success) {
                                                    showRealtimeMessage(answerId, 'Attachment removed.', 'green');
                                                    this.parentElement.innerHTML = '';
                                                } else if (data &amp;&amp; data.result &amp;&amp; data.result.error) {
                                                    showRealtimeMessage(answerId, 'Error: ' + data.result.error, 'red');
                                                } else {
                                                    showRealtimeMessage(answerId, 'Error: Unknown response', 'red');
                                                }
                                            });
                                        });
                                    });

                                    function showRealtimeMessage(answerId, text, color) {
                                        const questionDiv = document.querySelector(`input[name="answer_${answerId}"]`).closest('.question');
                                        const msgContainer = questionDiv.querySelector('.upload-message');
                                        msgContainer.style.color = color;
                                        msgContainer.style.opacity = 0;
                                        msgContainer.style.transition = 'opacity 0.4s ease';
                                        msgContainer.textContent = text;
                                        requestAnimationFrame(() => {
                                            msgContainer.style.opacity = 1;
                                        });
                                        setTimeout(() => {
                                            msgContainer.style.opacity = 0;
                                            setTimeout(() => msgContainer.textContent = '', 400);
                                        }, 3000);
                                    }
                                });
                            </script>
                            <script type="text/javascript">
                                function googleTranslateElementInit() {
                                    new google.translate.TranslateElement({
                                        pageLanguage: 'en',
                                        includedLanguages: 'en,it,es,fr,pt,de,sw,vi,id', // scegli le lingue da mostrare
                                        layout: google.translate.TranslateElement.InlineLayout.SIMPLE
                                    }, 'google_translate_element');
                                }
                            </script>
                            <script src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
                            <!-- Aggiunta icona WhatsApp -->
                            <a href="https://wa.me/393471234567?text=Salve!%20Ho%20bisogno%20di%20supporto%20sul%20questionario%20Planetio" 
                            target="_blank" 
                            style="
                                position: fixed;
                                bottom: 20px;
                                right: 20px;
                                z-index: 999;
                                background-color: #25D366;
                                color: white;
                                border-radius: 50%;
                                width: 60px;
                                height: 60px;
                                display: flex;
                                align-items: center;
                                justify-content: center;
                                box-shadow: 0 2px 5px rgba(0,0,0,0.3);
                                text-decoration: none;
                                font-size: 28px;
                            ">
                            <i class="fab fa-whatsapp"></i>
                            </a>
                        </head>
                        <body>
                            <div id="google_translate_element" style="text-align:right; margin-bottom: 15px;"></div>
                            <h1>EUDR Questionnaire</h1>
                            <div class="infos">
                                Protocol: <strong><t t-esc="batch.protocol_number"/></strong><br/>
                                Compiler: <strong><t t-esc="batch.questionnaire_compiler.name"/></strong>
                            </div>
                            <form method="post" action="/planetio/questionario/salva" enctype="multipart/form-data">
                                <input type="hidden" name="token" t-att-value="token"/>
                                <t t-set="sezioni" t-value="[
                                    ('GENERAL INFORMATION ABOUT THE SUPPLIER', batch.questionnaire_answer_ids_section_1),
                                    ('TRACEABILITY AND GEOLOCATION', batch.questionnaire_answer_ids_section_2),
                                    ('EUDR COMPLIANCE AND LOCAL LEGISLATION', batch.questionnaire_answer_ids_section_3),
                                    ('SUPPLY CHAIN AND INTERMEDIARIES', batch.questionnaire_answer_ids_section_4),
                                    ('CERTIFICATIONS AND SUSTAINABILITY', batch.questionnaire_answer_ids_section_5),
                                    ('RESPECT FOR INDIGENOUS PEOPLES RIGHTS', batch.questionnaire_answer_ids_section_6),
                                    ('RISK MANAGEMENT AND DOCUMENTATION', batch.questionnaire_answer_ids_section_7)
                                ]"/>
                                <t t-foreach="sezioni" t-as="sezione">
                                    <div class="section-title">
                                        <t t-esc="sezione[0]"/>
                                    </div>
                                    <t t-foreach="sezione[1]" t-as="answer">
                                        <div class="question">
                                            <label><t t-esc="answer.question_id.name"/></label>
                                            <div class="btn-group">
                                                <button type="button" class="btn-choice btn-yes" data-value="yes"
                                                        t-att-class="'btn-choice btn-yes' + (' active' if answer.answer == 'yes' else '')">YES</button>
                                                <button type="button" class="btn-choice btn-no" data-value="no"
                                                        t-att-class="'btn-choice btn-no' + (' active' if answer.answer == 'no' else '')">NO</button>
                                                <button type="button" class="btn-choice btn-attach"><i class="fa fa-paperclip"></i></button>

                                                <input type="file" t-att-name="'attachment_%s' % answer.id"/>
                                                <div class="file-name" style="font-size: 14px; margin-top: 5px; color: #333;">
                                                    <t t-if="answer.attachment_filename">
                                                        <t t-esc="answer.attachment_filename"/> 
                                                        <span class="remove-file" style="margin-left:10px; cursor:pointer; color:red; font-weight:bold;">X</span>
                                                    </t>
                                                </div>

                                                <input type="hidden" t-att-name="'answer_%s' % answer.id" t-att-value="answer.answer or ''"/>
                                            </div>
                                            <div class="upload-message" style="margin-top: 8px; font-weight: bold;"></div>
                                            <textarea t-att-name="'info_%s' % answer.id" class="note-field" placeholder="Insert notes here..."><t t-esc="(answer.additional_info or '').strip()"/></textarea>
                                        </div>
                                    </t>
                                </t>
                                <button type="submit">Validate</button>
                            </form>
                        </body>
                    </html>
                </t>
            </template>
        </field>
    </record>
</odoo>